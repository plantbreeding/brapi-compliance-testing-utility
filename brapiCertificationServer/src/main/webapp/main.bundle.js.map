{"version":3,"sources":["C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/$_lazy_route_resource lazy","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/alerts/alerts.component.css","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/alerts/alerts.component.html","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/alerts/alerts.component.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/app.component.css","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/app.component.html","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/app.component.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/app.module.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/auth.module.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/login/login.component.css","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/login/login.component.html","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/login/login.component.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/alert.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/call-defintion.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/run-tests-request.class.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/test-call-param.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/test-call.class.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/test-category.class.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/use-case-result.class.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/use-case.class.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/run-tests/run-tests.component.css","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/run-tests/run-tests.component.html","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/run-tests/run-tests.component.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/service/alert.service.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/service/login.service.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/service/test-access.service.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details-edit/test-details-edit.component.css","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details-edit/test-details-edit.component.html","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details-edit/test-details-edit.component.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details-view/test-details-view.component.css","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details-view/test-details-view.component.html","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details-view/test-details-view.component.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details/test-details.component.css","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details/test-details.component.html","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details/test-details.component.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-result-details/test-result-details.component.css","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-result-details/test-result-details.component.html","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-result-details/test-result-details.component.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-results/test-results.component.css","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-results/test-results.component.html","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-results/test-results.component.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-selection-list/test-selection-list.component.css","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-selection-list/test-selection-list.component.html","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-selection-list/test-selection-list.component.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-selection/test-selection.component.css","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-selection/test-selection.component.html","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-selection/test-selection.component.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/environments/environment.ts","C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/alerts/alerts.component.css\n// module id = ../../../../../src/app/alerts/alerts.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-offset-2 col-sm-8 col-xs-offset-1 col-xs-10\\\">\\n        <div *ngFor=\\\"let alert of alerts\\\" class=\\\"{{ cssClass(alert) }} alert-dismissable\\\">\\n            {{alert.message}}\\n            <a class=\\\"close\\\" (click)=\\\"removeAlert(alert)\\\">&times;</a>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/alerts/alerts.component.html\n// module id = ../../../../../src/app/alerts/alerts.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Alert } from '../model/alert';\nimport { AlertService } from '../service/alert.service';\nimport { Subject } from 'rxjs/Subject';\n\n@Component({\n  selector: 'app-alerts',\n  templateUrl: './alerts.component.html',\n  styleUrls: ['./alerts.component.css']\n})\nexport class AlertsComponent implements OnInit {\n\n  alerts: Alert[] = new Array();\n\n  constructor(private alertService: AlertService) { }\n\n  ngOnInit() {\n    this.alertService.getAlert().subscribe((alert: Alert) => {\n      if (this.alerts.length == 3) {\n        this.alerts.shift();\n      }\n      this.alerts.push(alert);\n    });\n  }\n\n  removeAlert(alert: Alert) {\n    this.alerts = this.alerts.filter(x => x !== alert);\n  }\n\n  cssClass(alert: Alert) {\n    if (!alert) {\n      return;\n    }\n\n    // return css class based on alert type\n    switch (alert.type) {\n      case 0:\n        return 'alert alert-success';\n      case 1:\n        return 'alert alert-danger';\n      case 2:\n        return 'alert alert-info';\n      case 3:\n        return 'alert alert-warning';\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/alerts/alerts.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-offset-2 col-sm-8 col-xs-offset-1 col-xs-10 text-center\\\">\\n            <h1>BrAPI Test Client</h1>\\n        </div>\\n        <div class=\\\"pull-right\\\">\\n            <a (click)=\\\"signOut()\\\" class=\\\"btn btn-default\\\">Sign out</a>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-offset-2 col-sm-8 col-xs-offset-1 col-xs-10\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { AlertService } from './service/alert.service';\nimport { LoginService } from './service/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [AlertService, LoginService],\n})\nexport class AppComponent {\n  title = 'app';\n\n  constructor( private router: Router, private loginService: LoginService){}\n\n  signOut() {\n    this.loginService.signOut(() => {\n      window.location.href='/app/login';\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule, Http, RequestOptions } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { RunTestsComponent } from './run-tests/run-tests.component';\nimport { TestSelectionComponent } from './test-selection/test-selection.component';\nimport { TestResultsComponent } from './test-results/test-results.component';\nimport { TestDetailsComponent } from './test-details/test-details.component';\nimport { TestSelectionListComponent } from './test-selection-list/test-selection-list.component';\nimport { TestResultDetailsComponent } from './test-result-details/test-result-details.component';\nimport { TestDetailsEditComponent } from './test-details-edit/test-details-edit.component';\nimport { TestDetailsViewComponent } from './test-details-view/test-details-view.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthModule } from './auth.module';\nimport { AlertsComponent } from './alerts/alerts.component';\n\nconst appRoutes: Routes = [\n  { path: 'app/login', component: LoginComponent },\n  { path: 'app/runtests', component: RunTestsComponent },\n  { path: 'app/runtests/:batchId', component: RunTestsComponent },\n  { path: 'app/test/:id/:edit', component: TestDetailsComponent },\n  { path: 'app/results/:batchId/:id', component: TestResultDetailsComponent },\n  { path: 'app', pathMatch: 'full', redirectTo: 'app/login' },\n  { path: '', pathMatch: 'full', redirectTo: 'app/login' },\n  { path: '**', redirectTo: 'app/login' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RunTestsComponent,\n    TestSelectionComponent,\n    TestResultsComponent,\n    TestDetailsComponent,\n    TestSelectionListComponent,\n    TestResultDetailsComponent,\n    TestDetailsEditComponent,\n    TestDetailsViewComponent,\n    LoginComponent,\n    AlertsComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    AuthModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/app.module.ts","\nimport { NgModule } from '@angular/core';\nimport { Http, RequestOptions } from '@angular/http';\nimport { AuthHttp, AuthConfig } from 'angular2-jwt';\n\nexport function authHttpServiceFactory(http: Http, options: RequestOptions) {\n  return new AuthHttp(new AuthConfig({\n    tokenName: 'token',\n    tokenGetter: (() => sessionStorage.getItem('token')),\n    globalHeaders: [{ 'Content-Type': 'application/json' }],\n  }), http, options);\n}\n\n@NgModule({\n  providers: [{\n    provide: AuthHttp,\n    useFactory: authHttpServiceFactory,\n    deps: [Http, RequestOptions]\n  }]\n})\nexport class AuthModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/auth.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".dont-break-out {\\r\\n\\r\\n    /* These are technically the same, but use both */\\r\\n    overflow-wrap: break-word;\\r\\n    word-wrap: break-word;\\r\\n  \\r\\n    -ms-word-break: break-all;\\r\\n    /* Instead use this non-standard one: */\\r\\n    word-break: break-word;\\r\\n  \\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = main","module.exports = \"<h1>Login</h1>\\n<div id=\\\"googleBtn\\\" class=\\\"g-signin2\\\" (click)=\\\"signIn()\\\"></div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../service/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  constructor( private router: Router, private loginService: LoginService) { }\n\n  ngOnInit() {\n    this.loginService.googleInit();\n  }\n\n  signIn(){\n    this.loginService.signIn(() => {\n      this.router.navigate(['/app/runtests']);\n    });\n  }\n\n  showJWT(){\n    return sessionStorage.getItem('token');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/login/login.component.ts","export class Alert {\n    message: string;\n    type: number;\n\n    constructor(message:string, type:number){\n        this.message = message;\n        this.type = type;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/alert.ts","export class CallDefinition {\n    id: string;\n    method: string;\n    call: string;\n    name: string;\n    availibleParams: string[];\n\n    static sort(a: CallDefinition, b: CallDefinition): number{\n        if(a.call < b.call) return -1;\n        if(a.call > b.call) return 1;\n        return 0;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/call-defintion.ts","export class RunTestRequest{\r\n    baseURL: String;\r\n    testCaseIds: String[];\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/run-tests-request.class.ts","export class TestCallParam {\n    param: string;\n    value: string;\n\n    constructor(param: string, value: string){\n        this.param = param;\n        this.value = value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/test-call-param.ts","import { CallDefinition } from \"./call-defintion\";\r\nimport { TestCallParam } from \"./test-call-param\";\r\n\r\nexport class TestCall{\r\n    id: string;\r\n    useCaseIndexNumber: number;\r\n    callPath: string;\r\n    expectedResultRaw: string;\r\n    callDefinitionID: string;\r\n    paramList: TestCallParam[];\r\n\r\n    constructor(){\r\n        this.paramList = [];\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/test-call.class.ts","import { UseCase } from \"./use-case.class\";\r\n\r\nexport class TestCategory{\r\n    categoryName: String;\r\n    selectedTotal: number;\r\n    testList: UseCase[];\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/test-category.class.ts","import { UseCase } from \"./use-case.class\";\r\nimport { TestCallResult } from \"./test-call-result.class\";\r\n\r\nexport class UseCaseResult{\r\n    batchID: string;\r\n    pass: boolean;\r\n    useCase: UseCase;\r\n    baseURL: string;\r\n    results: TestCallResult[];\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/use-case-result.class.ts","import { TestCall } from \"./test-call.class\";\r\n\r\nexport class UseCase{\r\n    id: string;\r\n    useCaseName: string;\r\n    tests: TestCall[] = new Array();\r\n    selected: boolean = true;\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/model/use-case.class.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/run-tests/run-tests.component.css\n// module id = ../../../../../src/app/run-tests/run-tests.component.css\n// module chunks = main","module.exports = \"<app-alerts></app-alerts>\\n<app-test-selection (testIds)=\\\"setTestIds($event)\\\"></app-test-selection>\\n<div class=\\\"row\\\" style=\\\"margin: 10px 0\\\">\\n  <div class=\\\"col-xs-offset-1 col-xs-2\\\">\\n    <p style=\\\"margin-top: 3px\\\">Base URL: </p>\\n  </div>\\n  <div class=\\\"col-xs-8\\\">\\n    <input class=\\\"col-xs-12\\\" type=\\\"text\\\" [value]=\\\"baseURL\\\" />\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-offset-5 col-xs-2\\\">\\n    <a [routerLink]=\\\"\\\" (click)=\\\"runTest()\\\" class=\\\"btn btn-default\\\" [ngClass]=\\\"{'disabled': testIds.length == 0}\\\">\\n      Run Tests\\n    </a>\\n  </div>\\n</div>\\n<app-test-results></app-test-results>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/run-tests/run-tests.component.html\n// module id = ../../../../../src/app/run-tests/run-tests.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { TestAccessService } from '../service/test-access.service';\nimport { RunTestRequest } from '../model/run-tests-request.class';\nimport { Observable } from 'rxjs/Observable';\nimport { UseCase } from '../model/use-case.class';\nimport { UseCaseResult } from '../model/use-case-result.class';\nimport { AlertService } from '../service/alert.service';\n\n@Component({\n  selector: 'app-run-tests',\n  templateUrl: './run-tests.component.html',\n  providers: [TestAccessService, AlertService],\n  styleUrls: ['./run-tests.component.css']\n})\nexport class RunTestsComponent implements OnInit, OnDestroy {\n  private sub: any;\n  testIds: String[] = new Array();\n  baseURL: String;\n\n  constructor(private testAccessService: TestAccessService, private location: Location, private route: ActivatedRoute, private alertService: AlertService) { }\n\n  ngOnInit() {\n    this.baseURL = 'http://localhost:8081/brapi/v1';\n    this.sub = this.route.params.subscribe(params => {\n      let testResultsBatchId = params['batchId'];\n      if (testResultsBatchId) {\n        this.testAccessService.getTestResults(testResultsBatchId);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  setTestIds(ids: String[]) {\n    this.testIds = ids;\n  }\n\n  runTest() {\n    let runReq: RunTestRequest = new RunTestRequest();\n    runReq.testCaseIds = this.testIds;\n    runReq.baseURL = this.baseURL;\n    this.testAccessService.runTests(runReq).subscribe((batchId: string) => {\n      this.location.go('runtests/' + batchId);\n      this.testAccessService.getTestResults(batchId);\n    }, err => {\n      this.alertService.handleHTTPError(err);\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/run-tests/run-tests.component.ts","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Alert } from '../model/alert';\n\n@Injectable()\nexport class AlertService {\n\n  private alertSub: Subject<Alert> = new Subject();\n\n  constructor() {\n  }\n\n  getAlert(): Subject<Alert> {\n    return this.alertSub;\n  }\n\n  postAlert(alert: Alert){\n    this.alertSub.next(alert);\n  }\n\n  handleHTTPError(err){\n    if(err.status == 403) {\n      this.postAlert(new Alert('You do not have permission to perform this action', 1));\n    }else if(err.status == 404) {\n      this.postAlert(new Alert('This action is unavailable', 1));\n    }else{\n      console.log(err);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/service/alert.service.ts","import { Injectable } from '@angular/core';\n\ndeclare var gapi: any;\n\n@Injectable()\nexport class LoginService {\n\n  public auth2: any;\n\n  constructor() {\n    this.googleInit();\n  }\n\n  public googleInit() {\n    gapi.load('auth2', () => {\n      this.auth2 = gapi.auth2.init({\n        client_id: '408930718026-1m4t6slfmp8c0vu0a4s0sp4ujvv3vqfa.apps.googleusercontent.com',\n        cookiepolicy: 'none',\n        scope: 'profile email'\n      });\n    });\n  }\n\n  signIn(callback: () => any) {\n    this.auth2.signIn({ prompt: 'select_account' }).then(\n      () => {\n        let googleUser = this.auth2.currentUser.get();\n        sessionStorage.setItem('token', 'Bearer ' + googleUser.getAuthResponse().id_token);\n        callback();\n\n      }, (error) => {\n        alert(JSON.stringify(error, undefined, 2));\n      });\n  }\n\n  signOut(callback: () => any) {\n    this.auth2.signOut().then(function () {\n      sessionStorage.removeItem('token');\n      callback();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/service/login.service.ts","import { Injectable } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs/Rx';\nimport { AuthHttp } from 'angular2-jwt';\nimport { Response } from '@angular/http';\n\nimport { RunTestRequest } from '../model/run-tests-request.class';\nimport { UseCaseResult } from '../model/use-case-result.class';\nimport { UseCase } from '../model/use-case.class';\nimport { CallDefinition } from '../model/call-defintion';\nimport { UseCaseResultList } from '../model/use-case-result-list.class';\nimport { AlertService } from './alert.service';\n\n@Injectable()\nexport class TestAccessService {\n  // for dev server: string = 'http://localhost:8081/';\n  server: string = window.location.hostname;\n  resultsSubject: Subject<UseCaseResult[]> = new Subject();\n  private subscription: Subscription;\n\n  constructor(private http: AuthHttp, private alertService: AlertService) { }\n\n  runTests(req: RunTestRequest): Observable<string> {\n    return this.http.post(this.server + 'runtest', req).map(this.getStringBody);\n  }\n\n  getTestResults(batchId: string) {\n    this.subscription = Observable.timer(0, 1000).switchMap(val => {\n      return this.http.get(this.server + 'testresults/' + batchId).map(this.getJsonBody);\n    }).subscribe((data: UseCaseResultList) => {\n      if (data) {\n        this.resultsSubject.next(data.results);\n        if (data.complete >= data.total) {\n          this.subscription.unsubscribe();\n        }\n      }\n    }, err => {\n      this.alertService.handleHTTPError(err);\n    });\n  }\n\n  getAllTestSummaries(): Observable<UseCase[]> {\n    return this.http.get(this.server + 'tests').map(this.getJsonBody);\n  }\n\n  getTestResultsSubject(): Subject<UseCaseResult[]> {\n    return this.resultsSubject;\n  }\n\n  getTest(id: string): Observable<UseCase> {\n    return this.http.get(this.server + 'test/' + id).map(this.getJsonBody);\n  }\n\n  saveTest(useCase: UseCase): Observable<string> {\n    return this.http.post(this.server + 'test', useCase).map(this.getStringBody);\n  }\n\n  deleteUseCase(id: string) {\n    return this.http.delete(this.server + 'test/' + id);\n  }\n\n  getCallDefinitions(): Observable<CallDefinition[]> {\n    return this.http.get(this.server + 'calls').map(this.getJsonBody);\n  }\n\n  getJsonBody(res: Response) {\n    if (res.text()) {\n      return res.json();\n    } else {\n      return null;\n    }\n  }\n\n  getStringBody(res: Response) {\n    return res.text();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/service/test-access.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details-edit/test-details-edit.component.css\n// module id = ../../../../../src/app/test-details-edit/test-details-edit.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"useCase\\\">\\n  <div class=\\\"row\\\">\\n    <div style=\\\"margin: 20px 0\\\">\\n      <h3>Use Case:\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"useCase.useCaseName\\\" />\\n        <a (click)=\\\"delete()\\\" class=\\\"btn btn-default\\\" style=\\\"float:right;\\\">\\n          Delete\\n        </a>\\n        <a (click)=\\\"save()\\\" class=\\\"btn btn-default\\\" style=\\\"float:right;\\\">\\n          Save\\n        </a>\\n      </h3>\\n    </div>\\n    <div *ngFor=\\\"let call of useCase.tests; let i = index\\\">\\n      <div style=\\\"font-size:  20px; margin-top:  20px;\\\">\\n        <p>Call #{{call.useCaseIndexNumber + 1}}: {{call.callPath}}</p>\\n      </div>\\n      <div>\\n        <p>Call:\\n          <select [(ngModel)]=\\\"call.callDefinitionID\\\" (change)=\\\"callDefinitionChanged(call)\\\">\\n            <option *ngFor=\\\"let callDef of callDefs\\\" [ngValue]=\\\"callDef.id\\\">{{ callDef.name }}</option>\\n          </select>\\n        </p>\\n      </div>\\n      <div>\\n        <p>Parameters:</p>\\n        <div *ngFor=\\\"let param of findCallDefById(call.callDefinitionID).availibleParams\\\" class=\\\"row\\\">\\n          <div class=\\\"col-xs-2\\\" style=\\\"margin-left: 20px\\\">\\n          <p >{{param}}</p>\\n        </div>\\n        <div class=\\\"col-xs-5\\\">\\n          <input type=\\\"text\\\" (input)=\\\"onParamChange($event.target.value, param, call)\\\" [value]=\\\"getParamValue(call, param)\\\">\\n        </div>\\n        </div>\\n      </div>\\n      <div>\\n        <p>Expected Return Content:</p>\\n        <textarea [(ngModel)]=\\\"call.expectedResultRaw\\\" cols=\\\"100\\\" rows=\\\"20\\\"></textarea>\\n      </div>\\n    </div>\\n    <a (click)=\\\"addCall()\\\" class=\\\"btn btn-default\\\">\\n      Add Call\\n    </a>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details-edit/test-details-edit.component.html\n// module id = ../../../../../src/app/test-details-edit/test-details-edit.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {Router} from '@angular/router';\nimport { Observable } from 'rxjs/Rx';\n\nimport { UseCase } from '../model/use-case.class';\nimport { TestAccessService } from '../service/test-access.service';\nimport { TestCall } from '../model/test-call.class';\nimport { CallDefinition } from '../model/call-defintion';\nimport { TestCallParam } from '../model/test-call-param';\nimport { AlertService } from '../service/alert.service';\n\n@Component({\n  selector: 'app-test-details-edit',\n  templateUrl: './test-details-edit.component.html',\n  styleUrls: ['./test-details-edit.component.css']\n})\nexport class TestDetailsEditComponent implements OnInit {\n\n  @Input() useCaseObs: Observable<UseCase>;\n  useCase: UseCase;\n  @Output() toggleEdit: EventEmitter<boolean> = new EventEmitter();\n  @Output() useCaseId: EventEmitter<string> = new EventEmitter();\n  callDefs: CallDefinition[];\n\n  constructor(private testAccessService: TestAccessService, private router: Router, private alertService: AlertService) { }\n\n  ngOnInit() {\n    this.callDefs = new Array();\n    this.testAccessService.getCallDefinitions().subscribe((data) => {\n      this.callDefs = data.sort(CallDefinition.sort);\n      this.useCaseObs.subscribe((useCase: UseCase) => {\n        this.useCase = useCase;\n      });\n    }, err => {\n      this.alertService.handleHTTPError(err);\n    });\n  }\n\n  save() {\n    this.testAccessService.saveTest(this.useCase).subscribe((id: string) => {\n      this.toggleEdit.emit(true);\n    }, err => {\n      this.alertService.handleHTTPError(err);\n    });\n  }\n\n  delete(){\n    this.testAccessService.deleteUseCase(this.useCase.id).subscribe(() =>{\n      this.router.navigate(['/app/runtests']);\n    }, err => {\n      this.alertService.handleHTTPError(err);\n    });\n  }\n\n  addCall() {\n    let testCall: TestCall = new TestCall();\n    testCall.useCaseIndexNumber = this.useCase.tests.length;\n    testCall.callDefinitionID = this.callDefs[0].id;\n    this.buildCallPath(testCall);\n    this.useCase.tests.push(testCall);\n  }\n\n  callDefinitionChanged(call: TestCall) {\n    call.paramList = [];\n    this.buildCallPath(call);\n  }\n\n  getParamValue(call: TestCall, param: string): string{\n    let entity = call.paramList.find((value) => {\n      return value.param == param;\n    })\n    if(entity){\n      return entity.value;\n    }else{\n      return '';\n    }\n  }\n\n  onParamChange(value: string, param: string, call: TestCall) {\n    let index = call.paramList.findIndex((entity, i, obj) => {\n      return entity.param == param;\n    });\n    if (value.length > 0) {\n      if (index >= 0) {\n        call.paramList[index].value = value;\n      } else {\n        call.paramList.push(new TestCallParam(param, value))\n      }\n    } else {\n      if (index >= 0) {\n        call.paramList.splice(index, 1);\n      }\n    }\n    this.buildCallPath(call);\n  }\n\n  buildCallPath(call: TestCall) {\n    let callPath: string = this.findCallDefById(call.callDefinitionID).call;\n    if (call.paramList.length > 0) {\n      let first = true;\n      call.paramList.forEach((entity) => {\n        if (entity.value.length > 0) {\n          if (entity.param.startsWith('{') && entity.param.endsWith('}')) {\n            callPath = callPath.replace(entity.param, entity.value);\n          } else {\n            if (first) {\n              first = false;\n              callPath = callPath + '?' + entity.param + '=' + entity.value;\n            } else {\n              callPath = callPath + '&' + entity.param + '=' + entity.value;\n            }\n          }\n        }\n      })\n    }\n    call.callPath = encodeURI(callPath);\n  }\n\n  buildCallDefsList() {\n    this.testAccessService.getCallDefinitions().subscribe((data) => {\n      this.callDefs = data;\n    }, err => {\n      this.alertService.handleHTTPError(err);\n    });\n  }\n\n  findCallDefById(id: string) : CallDefinition {\n    let calldef = this.callDefs.find((value: CallDefinition) => {\n      return value.id == id;\n    });\n    return calldef;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details-edit/test-details-edit.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details-view/test-details-view.component.css\n// module id = ../../../../../src/app/test-details-view/test-details-view.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"useCase\\\">\\n  <div class=\\\"row\\\">\\n    <div style=\\\"margin: 20px 0\\\">\\n      <h3>Use Case: {{useCase.useCaseName}}\\n        <a [routerLink]=\\\"\\\" (click)=\\\"edit()\\\" class=\\\"btn btn-default\\\" style=\\\"float:right;\\\">\\n          Edit\\n        </a>\\n      </h3>\\n    </div>\\n    <div *ngFor=\\\"let call of useCase.tests\\\">\\n      <div style=\\\"font-size:  20px; margin-top:  20px;\\\">\\n        <p>Call #{{call.useCaseIndexNumber + 1}}: {{call.callPath}}</p>\\n      </div>\\n      <div>\\n        <p>Expected Return Content:</p>\\n        <pre style=\\\"max-height: 360px\\\">{{parse(call.expectedResultRaw) | json}}</pre>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details-view/test-details-view.component.html\n// module id = ../../../../../src/app/test-details-view/test-details-view.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { UseCase } from '../model/use-case.class';\nimport { Observable } from 'rxjs/Rx';\n\n@Component({\n  selector: 'app-test-details-view',\n  templateUrl: './test-details-view.component.html',\n  styleUrls: ['./test-details-view.component.css']\n})\nexport class TestDetailsViewComponent implements OnInit {\n\n  @Input() useCaseObs: Observable<UseCase>;\n  useCase: UseCase;\n  @Output() toggleEdit: EventEmitter<boolean> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    this.useCaseObs.subscribe((useCase: UseCase) => {\n      this.useCase = useCase;\n    });\n  }\n\n  edit() {\n    this.toggleEdit.emit(true);\n  }\n\n  parse(raw: string) {\n    return JSON.parse(raw);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details-view/test-details-view.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details/test-details.component.css\n// module id = ../../../../../src/app/test-details/test-details.component.css\n// module chunks = main","module.exports = \"<app-alerts></app-alerts>\\n<div class=\\\"row\\\">\\n  <a [routerLink]=\\\"\\\" (click)=\\\"back()\\\" class=\\\"btn btn-default\\\">\\n    Back\\n  </a>\\n</div>\\n\\n<app-test-details-view *ngIf=\\\"!edit\\\" [useCaseObs]=\\\"useCase\\\" (toggleEdit)=\\\"toggleEdit()\\\"></app-test-details-view>\\n<app-test-details-edit *ngIf=\\\"edit\\\" [useCaseObs]=\\\"useCase\\\" (toggleEdit)=\\\"toggleEdit()\\\"></app-test-details-edit>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details/test-details.component.html\n// module id = ../../../../../src/app/test-details/test-details.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs/Rx';\n\nimport { TestAccessService } from '../service/test-access.service';\nimport { UseCase } from '../model/use-case.class';\nimport { CallDefinition } from '../model/call-defintion';\nimport { AlertService } from '../service/alert.service';\n\n@Component({\n  selector: 'app-test-details',\n  templateUrl: './test-details.component.html',\n  providers: [ TestAccessService ],\n  styleUrls: ['./test-details.component.css']\n})\nexport class TestDetailsComponent implements OnInit, OnDestroy {\n  private sub: any;\n  useCase: Observable<UseCase>;\n  edit: boolean;\n  useCaseId: string;\n\n  constructor(private testAccessService: TestAccessService, private location: Location, private route: ActivatedRoute, private alertService: AlertService) { }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.edit = params['edit'] === 'true';\n      this.useCaseId = params['id'];\n       if(this.useCaseId){\n        this.useCase = this.testAccessService.getTest(this.useCaseId);\n       }\n    }, err => {\n      this.alertService.handleHTTPError(err);\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  back(){\n    this.location.back();\n  }\n\n  toggleEdit(){\n    this.edit = !this.edit;\n    this.useCase = this.testAccessService.getTest(this.useCaseId);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-details/test-details.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-result-details/test-result-details.component.css\n// module id = ../../../../../src/app/test-result-details/test-result-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" style=\\\"margin-bottom: 10px\\\">\\n  <a [routerLink]=\\\"\\\" (click)=\\\"back()\\\" class=\\\"btn btn-default\\\">\\n    Back\\n  </a>\\n</div>\\n<div *ngIf=\\\"useCaseResult\\\">\\n  <div *ngFor=\\\"let result of useCaseResult.results; let i = index;\\\">\\n    <div class=\\\"row\\\" style=\\\"font-size:  20px; margin-top:  20px;\\\">\\n      <p>Call #{{useCaseResult.useCase.tests[i].useCaseIndexNumber + 1}}:\\n        <a href=\\\"{{useCaseResult.baseURL + useCaseResult.useCase.tests[i].callPath}}\\\">{{useCaseResult.baseURL + useCaseResult.useCase.tests[i].callPath}}</a>\\n      </p>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <p [style.color]=\\\"result.pass? 'green': 'red'\\\" style=\\\"font-weight: bold;\\\">{{result.pass? 'PASS': 'FAIL'}}</p>\\n      <ul *ngIf=\\\"!result.pass\\\">\\n        <li *ngFor=\\\"let msg of result.diffList\\\">\\n          {{msg}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <p>Expected</p>\\n        <pre style=\\\"max-height: 360px\\\">{{parse(result.rawExpected) | json}}</pre>\\n      </div>\\n      <div class=\\\"col-sm-6\\\">\\n        <p>Actual</p>\\n        <pre style=\\\"max-height: 360px\\\">{{parse(result.rawActual) | json}}</pre>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-result-details/test-result-details.component.html\n// module id = ../../../../../src/app/test-result-details/test-result-details.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { TestAccessService } from '../service/test-access.service';\nimport { UseCaseResult } from '../model/use-case-result.class';\n\n@Component({\n  selector: 'app-test-result-details',\n  templateUrl: './test-result-details.component.html',\n  providers: [ TestAccessService ],\n  styleUrls: ['./test-result-details.component.css']\n})\nexport class TestResultDetailsComponent implements OnInit {\n  private sub: any;\n  @Input() useCaseResult: UseCaseResult;\n  useCaseResultIndex: number;\n\n  constructor(private testAccessService: TestAccessService, private location: Location, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    console.log('made it');\n    if (!this.useCaseResult) {\n      this.sub = this.route.params.subscribe(params => {\n        this.useCaseResultIndex = params['id'];\n        let testResultsBatchId = params['batchId'];\n        if (testResultsBatchId) {\n          this.testAccessService.getTestResults(testResultsBatchId);\n        }\n      });\n      this.testAccessService.getTestResultsSubject().subscribe((data: UseCaseResult[]) => {\n        this.useCaseResult = data[this.useCaseResultIndex];\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  parse(raw:string){\n    return JSON.parse(raw);\n  }\n\n  back(){\n    this.location.back();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-result-details/test-result-details.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-results/test-results.component.css\n// module id = ../../../../../src/app/test-results/test-results.component.css\n// module chunks = main","module.exports = \"<div style=\\\"margin: 10px 0;\\\">\\n  <ul class=\\\"nav nav-tabs\\\">\\n    <li [ngClass]=\\\"{'active': selectedTab(0)}\\\">\\n      <a  [routerLink]=\\\"\\\" (click)=\\\"selectTab(0)\\\" >Test Results</a>\\n    </li>\\n    <li [ngClass]=\\\"{'active': selectedTab(1)}\\\">\\n      <a  [routerLink]=\\\"\\\" (click)=\\\"selectTab(1)\\\">Test Log</a>\\n    </li>\\n  </ul>\\n  <div class=\\\"tab-content\\\" style=\\\"min-height: 250px\\\">\\n    <div id=\\\"results-tab\\\" *ngIf=\\\"selectedTab(0)\\\"  class=\\\"tab-pane fade in active\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\" *ngFor=\\\"let result of results; let i = index;\\\">\\n          <a [routerLink]=\\\"['/app/results', result.batchID, i]\\\" style=\\\"display: block\\\">\\n            <span [style.color]=\\\"result.pass? 'green': 'red'\\\" style=\\\"font-weight: bold;\\\">{{result.pass? 'PASS': 'FAIL'}}</span>\\n            - {{result.useCase.useCaseName}}\\n          </a>\\n        </li>\\n      </ul>\\n    </div>\\n    <div id=\\\"log-tab\\\"  *ngIf=\\\"selectedTab(1)\\\" class=\\\"tab-pane fade in active\\\">\\n      <pre>{{resultsLog}}</pre>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-results/test-results.component.html\n// module id = ../../../../../src/app/test-results/test-results.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { TestAccessService } from '../service/test-access.service';\nimport { UseCaseResult } from '../model/use-case-result.class';\n\n@Component({\n  selector: 'app-test-results',\n  templateUrl: './test-results.component.html',\n  styleUrls: ['./test-results.component.css']\n})\nexport class TestResultsComponent implements OnInit {\n\n  resultsLog: string;\n  results:UseCaseResult[];\n  selectedTabIndex: number;\n\n  constructor(private testAccessService: TestAccessService) { }\n\n  ngOnInit() {\n    this.selectedTabIndex = 0;\n    this.testAccessService.getTestResultsSubject().subscribe((data:UseCaseResult[]) =>{\n      this.resultsLog = 'TEST LOG\\n'\n      this.results = data;\n      for(let result of data){\n        this.resultsLog = this.resultsLog.concat(result.useCase.useCaseName, '\\n');\n        for(let callResult of result.results){\n          this.resultsLog = this.resultsLog.concat(callResult.errorMsg, '\\n');\n        }\n      }\n    })\n  }\n\n  selectTab(index:number){\n    this.selectedTabIndex = index;\n  }\n  selectedTab(index:number):boolean{\n    return this.selectedTabIndex == index;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-results/test-results.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"input[type='checkbox'] {\\r\\n    width:20px;\\r\\n    height:20px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-selection-list/test-selection-list.component.css\n// module id = ../../../../../src/app/test-selection-list/test-selection-list.component.css\n// module chunks = main","module.exports = \"<div style=\\\"min-height: 350px\\\">\\n  <table class=\\\"table table-striped table-condensed table-hover\\\">\\n    <tbody>\\n      <tr>\\n        <td>\\n          <input type=\\\"checkbox\\\" (change)=\\\"selectAll()\\\" [checked]=\\\"isSelectAll\\\">\\n        </td>\\n        <td>Select All</td>\\n        <td colspan=\\\"2\\\">\\n          <a (click)=\\\"createNewTest()\\\" class=\\\"btn btn-default\\\" style=\\\"float:right;\\\">\\n            New Use Case\\n          </a>\\n        </td>\\n      </tr>\\n      <tr *ngFor=\\\"let test of pagedTests[currentPage]\\\">\\n        <td>\\n          <input type=\\\"checkbox\\\" (change)=\\\"toggleTest(test)\\\" [checked]=\\\"test.selected\\\">\\n        </td>\\n        <td>{{test.useCaseName}}</td>\\n        <td style=\\\"width: 60px\\\">\\n          <a [routerLink]=\\\"['/app/test', test.id, false]\\\" class=\\\"btn btn-default\\\" style=\\\"float:right;\\\">\\n            View\\n          </a>\\n        </td>\\n        <td style=\\\"width: 60px\\\">\\n          <a [routerLink]=\\\"['/app/test', test.id, true]\\\" class=\\\"btn btn-default\\\" style=\\\"float:right;\\\">\\n            Edit\\n          </a>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n<div class=\\\"pagination pull-right\\\">\\n  <ul class=\\\"nav nav-pills\\\">\\n    <li [ngClass]=\\\"{'disabled': currentPage == 0}\\\">\\n      <a (click)=\\\"prevPage()\\\" class=\\\"btn\\\">« Prev</a>\\n    </li>\\n    <li *ngFor=\\\"let n of range(pagedTests.length)\\\" [ngClass]=\\\"{'active': n == currentPage}\\\">\\n      <a (click)=\\\"setPage(n)\\\" class=\\\"btn\\\">{{n+1}}</a>\\n    </li>\\n    <li [ngClass]=\\\"{'disabled': currentPage == pagedTests.length - 1}\\\">\\n      <a (click)=\\\"nextPage()\\\" class=\\\"btn\\\">Next »</a>\\n    </li>\\n  </ul>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-selection-list/test-selection-list.component.html\n// module id = ../../../../../src/app/test-selection-list/test-selection-list.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { UseCase } from '../model/use-case.class';\nimport { TestAccessService } from '../service/test-access.service';\nimport { AlertService } from '../service/alert.service';\n\n@Component({\n  selector: 'app-test-selection-list',\n  templateUrl: './test-selection-list.component.html',\n  styleUrls: ['./test-selection-list.component.css']\n})\nexport class TestSelectionListComponent implements OnInit {\n\n  @Input() testList: UseCase[];\n  @Output() selectedTests = new EventEmitter();\n  pagedTests: UseCase[][];\n  currentPage: number;\n  isSelectAll: boolean;\n\n  constructor(private testAccessService: TestAccessService, private router: Router, private alertService: AlertService) { }\n\n  ngOnInit() {\n    this.buildPagedTests();\n    this.currentPage = 0;\n\n    this.isSelectAll = true;\n    for (let test of this.testList) {\n      this.isSelectAll = test.selected && this.isSelectAll;\n    }\n  }\n\n  buildPagedTests() {\n    this.pagedTests = new Array();\n    for (let i = 0; i < this.testList.length; i = i + 10) {\n      this.pagedTests.push(this.testList.slice(i, i + 9));\n    }\n  }\n\n  selectAll() {\n    this.isSelectAll = !this.isSelectAll;\n    for (let test of this.testList) {\n      test.selected = this.isSelectAll;\n    }\n    this.selectedTests.emit(this.testList);\n  }\n  toggleTest(test: UseCase) {\n    if (this.isSelectAll) {\n      this.isSelectAll = false;\n    }\n    test.selected = !test.selected;\n    this.selectedTests.emit(this.testList);\n  }\n  prevPage() {\n    if (this.currentPage > 0) {\n      this.currentPage = this.currentPage - 1;\n    }\n  }\n  nextPage() {\n    if (this.currentPage < this.pagedTests.length - 1) {\n      this.currentPage = this.currentPage + 1;\n    }\n  }\n  setPage(n: number) {\n    this.currentPage = n;\n  }\n  range(n: number): number[] {\n    return Array(n).fill(0).map((x, i) => i);\n  }\n  createNewTest() {\n    let useCase: UseCase = new UseCase();\n    this.testAccessService.saveTest(useCase).subscribe(id => {\n      console.log(id);\n      this.router.navigate(['/app/test', id, true]);\n    }, err => {\n      this.alertService.handleHTTPError(err);\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-selection-list/test-selection-list.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-selection/test-selection.component.css\n// module id = ../../../../../src/app/test-selection/test-selection.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" style=\\\"margin: 10px 0 25px 0\\\">\\n  <ul class=\\\"nav nav-pills nav-stacked col-xs-3\\\">\\n      <li *ngFor=\\\"let testCategory of testCategories\\\" [ngClass]=\\\"{'active': testCategory == selectedCategory}\\\">\\n          <a [routerLink]=\\\"\\\" (click)=\\\"selectCategory(testCategory)\\\">{{testCategory.categoryName}} ({{testCategory.selectedTotal}})</a>\\n      </li>\\n  </ul>\\n\\n  <div class=\\\"tab-content col-xs-9\\\">\\n      <div class=\\\"tab-pane fade in active\\\" *ngFor=\\\"let testCategory of testCategories\\\" >\\n        <app-test-selection-list *ngIf=\\\"testCategory == selectedCategory\\\" [testList]=\\\"testCategory.testList\\\" (selectedTests)=\\\"selectedTests($event)\\\"></app-test-selection-list>\\n      </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-selection/test-selection.component.html\n// module id = ../../../../../src/app/test-selection/test-selection.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { TestCategory } from '../model/test-category.class';\nimport { TestAccessService } from '../service/test-access.service';\nimport { UseCase } from '../model/use-case.class';\nimport { UseCaseResult } from '../model/use-case-result.class';\n\n@Component({\n  selector: 'app-test-selection',\n  templateUrl: './test-selection.component.html',\n  styleUrls: ['./test-selection.component.css']\n})\nexport class TestSelectionComponent implements OnInit {\n\n  @Output() testIds: EventEmitter<String[]> = new EventEmitter();\n\n  testCategories: TestCategory[];\n  selectedCategory: TestCategory;\n\n  constructor(private testAccessService: TestAccessService) { }\n\n  ngOnInit() {\n    this.testCategories = this.getCategories();\n    this.testAccessService.getTestResultsSubject().subscribe((data: UseCaseResult[]) => {\n      data.map((d: UseCaseResult) => {\n        let selected = d.useCase;\n        for (let useCase of this.testCategories[0].testList) {\n          if (useCase.id == selected.id) {\n            useCase.selected = true;\n            break;\n          }\n        }\n      });\n      this.testCategories[0].selectedTotal = this.calcSelectedTotal(this.testCategories[0].testList);\n      this.emitTestIds();\n    });\n  }\n\n  selectCategory(testCategory: TestCategory) {\n    this.selectedCategory = testCategory;\n  }\n\n  selectedTests(selectedTests: UseCase[]) {\n    this.selectedCategory.testList = selectedTests;\n    this.selectedCategory.selectedTotal = this.calcSelectedTotal(selectedTests);\n    this.emitTestIds();\n  }\n\n  emitTestIds() {\n    let allIds: String[] = new Array();\n    for (let category of this.testCategories) {\n      allIds = allIds.concat(category.testList.filter((val) => { return val.selected }).map((val) => { return val.id }));\n    }\n    this.testIds.emit(allIds);\n  }\n\n  calcSelectedTotal(cases:UseCase[]):number{\n    let x = cases.filter((val) => {return val.selected });\n    return x.length;\n  }\n\n  getCategories(): TestCategory[] {\n    let testCategories: TestCategory[] = new Array();\n    testCategories.push(this.getMockCategory('All Use Cases'));\n\n    this.testAccessService.getAllTestSummaries().subscribe(\n      data => {\n        this.testCategories[0].testList = data;\n        this.testCategories[0].selectedTotal = this.calcSelectedTotal(this.testCategories[0].testList);\n        this.selectedCategory = this.testCategories[0];\n      },\n      err => {\n        console.log('Something went wrong!');\n      });\n\n    return testCategories;\n  }\n  getMockCategory(name: String): TestCategory {\n    let cat: TestCategory = new TestCategory();\n    cat.categoryName = name;\n    cat.testList = new Array();\n    return cat;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/app/test-selection/test-selection.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/ps664/Documents/BrAPI/brapi-compliance-testing-utility/brapiCertificationServer/angular/src/main.ts"],"sourceRoot":"webpack:///"}